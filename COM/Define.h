#ifndef _DEFINE_H_H
#define _DEFINE_H_H

#include	"stm32f4xx.h"
#include 	"FreeRTOS.h"
#include	"ff.h"


#define		AdminPassWord		"201300\0"								//¹ÜÀíÔ±ÃÜÂë£¬ÓÃÓÚĞŞ¸ÄÉè±¸id
#define		AdjustPassWord		"201301\0"								//Ğ£×¼ÃÜÂë
#define		TestPassWord		"201302\0"								//ÀÏ»¯²âÊÔÃÜÂë
#define		CheckQRPassWord		"201303\0"								//²âÊÔ¶şÎ¬ÂëÃÜÂë
#define		AdjLedPassWord		"201304\0"								//Ğ£×¼ledÃÜÂë
#define		FactoryResetPassWord	"201305\0"							//»Ö¸´³ö³§ÉèÖÃÃÜÂë
#define		ChangeValueShowTypePassWord	"201306\0"						//ÇĞ»»½á¹ûÏÔÊ¾Ä£Ê½£¬ÊÇ·ñÏÔÊ¾ÕæÊµÖµ
#define		UnlockLCDPassWord	"201307\0"								//½âËøÆÁÄ»Ò»´Î

/***************************************************************************************************/
/***************************************************************************************************/
/*****************************************Èí¼ş°æ±¾**************************************************/
/***************************************************************************************************/
/***************************************************************************************************/
/*V1.0.03*/
#define	GB_SoftVersion	(unsigned short)1050
#define	GB_SoftVersion_Build	"Build17072601\0"

/*·şÎñÆ÷ĞÅÏ¢*/
#define	GB_ServerIp_1		116
#define	GB_ServerIp_2		62
#define	GB_ServerIp_3		108
#define	GB_ServerIp_4		201

#define	GB_ServerPort		8080
/**********************************************************************************************************/
/******************************************²Ù×÷½á¹û±äÁ¿*************************************************/
/**********************************************************************************************************/
typedef enum
{ 
	My_Pass = pdPASS,		//²Ù×÷³É¹¦
	My_Fail = pdFAIL			//²Ù×÷Ê§°Ü
}MyState_TypeDef;

typedef enum
{ 
	true = 1,
	false = 0
}bool;

typedef enum
{ 
	LED_Error = 1,		//led´íÎó
	LED_OK = 0			//ledÕı³£
}MyLEDCheck_TypeDef;
/**********************************************************************************************************/
/**********************************************************************************************************/
typedef enum
{ 
	NormalTestType = 0,																	//³£¹æ²âÊÔ
	PaiDuiTestType = 1																	//ÅÅ¶Ó²âÊÔ
}TestType;
/**********************************************************************************************************/
/******************************************fatfs½á¹¹Ìå¶¨Òå*************************************************/
/**********************************************************************************************************/
/*´Ë½á¹¹ÌåÓÃÓÚÔÚ½øĞĞsd²Ù×÷ÊÇÉêÇëÄÚ´æ*/
typedef struct
{
	FIL file;
	UINT br;
	UINT bw;
	FRESULT res;
	FSIZE_t size;
}FatfsFileInfo_Def; 

typedef struct
{
	DIR dir;
	FRESULT res;
	FSIZE_t size;
}FatfsDirInfo_Def; 


/**********************************************************************************************************/
/**********************************************************************************************************/

#define	PaiDuiWeiNum	8							//ÅÅ¶ÓÎ»ÖÃÊıÄ¿
typedef enum
{
	statusNull = 0,									//Ã»¿ªÊ¼,Ä¬ÈÏ×´Ì¬
	status_user = 1,								//Ñ¡Ôñ²Ù×÷ÈË×´Ì¬
	status_sample = 2,								//»ñÈ¡ÑùÆ·ID×´Ì¬
	status_wait1 = 3,								//µÈ´ı²å¿¨1
	status_preread = 4,								//Ô¤¶Á¿¨×´Ì¬
	status_start = 5,								//Æô¶¯ÅÅ¶Ó
	status_outcard = 6,								//µÈ´ı´Ó¿¨²Û°Î³ö
	status_in_n = 7,								//µ¹¼ÆÊ±×´Ì¬ -- µÈ´ı²åÈëÅÅ¶ÓÎ»
	status_out_n = 8,								//µ¹¼ÆÊ±×´Ì¬ -- µÈ´ı°Î³öÅÅ¶ÓÎ»
	status_incard_n = 9,							//µ¹¼ÆÊ±×´Ì¬ -- µÈ´ı²åÈë¿¨²Û
	status_timedown = 10,							//µ¹¼ÆÊ±×´Ì¬
	status_prereadagain_n = 11,						//µ¹¼ÆÊ±×´Ì¬ -- ÔÙ´ÎÔ¤¶Á¿¨£¬Ö÷Òª¼ì²â¿¨±ä¸ü
	status_in_o = 12,								//³¬Ê±×´Ì¬ -- µÈ´ı²åÈëÅÅ¶ÓÎ»
	status_out_o = 13,								//³¬Ê±×´Ì¬ -- µÈ´ı°Î³öÅÅ¶ÓÎ»
	status_incard_o = 14,							//³¬Ê±×´Ì¬ -- µÈ´ı²åÈë¿¨²Û
	status_timeup = 15,								//³¬Ê±×´Ì¬
	status_prereadagain_o = 16,						//³¬Ê±×´Ì¬ -- ÔÙ´ÎÔ¤¶Á¿¨£¬Ö÷Òª¼ì²â¿¨±ä¸ü
	status_timedownagain = 17,						//µ¹¼ÆÊ±½çÃæ
	status_test = 18,								//²âÊÔ
}MyPaiDuiStatues;

/**********************************************************************************************************/
/******************************************Ê±¼ä½á¹¹Ìå¶¨Òå**************************************************/
/**********************************************************************************************************/
#pragma pack(1)
typedef struct
{
	unsigned char year;
	unsigned char month;
	unsigned char day;
	unsigned char hour;
	unsigned char min;
	unsigned char sec;
}MyTime_Def;
#pragma pack()
/**********************************************************************************************************/
/**********************************************************************************************************/



/**********************************************************************************************************/
/******************************************ÎÂ¶È½á¹¹Ìå¶¨Òå**************************************************/
/**********************************************************************************************************/
#pragma pack(1)
typedef struct
{
	float  E_Temperature;			//»·¾³ÎÂ¶È
	float	O_Temperature;			//±»²âÎïÌåÎÂ¶È
	float I_Temperature;			//ÄÚ²¿ÎÂ¶È
}MyTemp_Def;
#pragma pack()
/**********************************************************************************************************/
/**********************************************************************************************************/

/**********************************************************************************************************/
/******************************************¶şÎ¬ÂëÏà¹Ø¶¨Òå**************************************************/
/**********************************************************************************************************/


#define	ITEM_NUM	4
#define	ItemNameLen						20			//????????
#define	ItemMeasureLen					10			//????????

#pragma pack(1)
typedef struct ItemConstData_Tag
{
	char itemName[ItemNameLen];									//ÏîÄ¿Ãû³Æ
	unsigned short icoIndex;								//ÅÅ¶Ó½çÃæÏÔÊ¾Í¼±êµÄË÷Òı
	unsigned char pointNum;								//Ğ¡Êıµã¸öÊı
	float lowstResult;									//×îµÍ¼ì²âÏß
	float highestResult;								//×î¸ß¼ì²âÏß
	char normalResult[50];								//²Î¿¼Öµ
	char itemMeasure[10];								//µ¥Î»
}ItemConstData;
#pragma pack()

typedef enum
{
	CardCodeScanning = 0,											//ÕıÔÚÉ¨Ãè
	CardCodeScanOK = 1,												//É¨Ãè¶şÎ¬Âë³É¹¦
	CardCodeScanFail = 2,											//É¨ÃèÊ§°Ü
	CardCodeTimeOut = 3,											//¹ıÆÚ
	CardCodeCardOut = 4,											//¿¨±»°Î³ö
	CardCodeScanTimeOut = 5,										//É¨Ãè³¬Ê±
	CardCodeCRCError = 6,											//crc´íÎó
	CardUnsupported = 7												//µ±Ç°³ÌĞò²»Ö§³Ö
}ScanCodeResult;

#pragma pack(1)
typedef struct QRCode_Tag
{
	char	ItemName[ItemNameLen];						//²âÊÔÏîÄ¿
	unsigned short ItemLocation;						//TÏßÎ»ÖÃ
	unsigned char ChannelNum;							//Í¨µÀºÅ(0-7)
	float	ItemFenDuan[2];								//·Ö¶Î·å¸ß±È
	float	ItemBiaoQu[3][3];							//±ê×¼ÇúÏß
			//2 --- ?2???
			//4 --- a , b, c d (????)
	unsigned char CardWaitTime;							//¼ì²â¿¨·´Ó¦Ê±¼ä
	unsigned short CLineLocation;						//cÏßÎ»ÖÃ
	char	PiHao[15];									//Åú´ÎºÅ
	char	piNum[10];
	MyTime_Def	CardBaoZhiQi;						//±£ÖÊÆÚ
	ItemConstData itemConstData;						//´ËÏîÄ¿µÄ¹Ì¶¨Êı¾İ
	unsigned short CRC16;								//crc
}QRCode;
#pragma pack()



#define	MaxLocation			6500						//×î´óĞĞ³Ì
#define	StartTestLocation	1250							//²âÊÔÆğÊ¼Î»ÖÃ
#define	EndTestLocation		4300						//²âÊÔ½áÊøÎªÖ¹
#define	WaittingCardLocation	MaxLocation					//µÈ´ı²å¿¨µÄÎ»ÖÃ
#define	AvregeNum		10								//Æ½¾ùÖµÂË²¨¸öÊı
#define	FilterNum		5								//Æ½»¬ÂË²¨¸öÊı
#define	MaxPointLen		((EndTestLocation - StartTestLocation)/AvregeNum - FilterNum)	//²âÊÔµã¸öÊı


/**********************************************************************************************************/
/**********************************************************************************************************/

/**********************************************************************************************************/
/******************************************ÑùÆ·IDÏà¹Ø¶¨Òå**************************************************/
/**********************************************************************************************************/
#define	MaxSampleIDLen	20											//×îóÖ§³ÖÑùÆ·id³¤¶ÈÎª20
/**********************************************************************************************************/
/**********************************************************************************************************/

/**********************************************************************************************************/
/******************************************½çÃæÏà¹Ø¶¨Òå****************************************************/
/***************************************************************************´*******************************/

typedef struct LineInfo_Tag
{
	unsigned short MaxData;				//ÊµÊ±ÇúÏß×î´óµÄÊıÖµ
	unsigned short Y_Scale;				//ÇúÏßyÖá×îµÍµÄ¿Ì¶È
	unsigned short MUL_Y;				//YÖá·Å´ó±¶Êı
}LineInfo;

/**********************************************************************************************************/
/**********************************************************************************************************/

/**********************************************************************************************************/
/******************************************ÆÁÄ»Ïà¹Ø¶¨Òå****************************************************/
/**********************************************************************************************************/
#define	LCD_Head_1		0xAA											//Ğ­ÒéÍ·1
#define	LCD_Head_2		0xBB											//Ğ­ÒéÍ·2

#define W_REGSITER 		0x80          									//Ğ´ÈëÊı¾İ,ÎŞÓ¦´ğ          
#define R_REGSITER 	0x81          									//¶ÁÈ¡Êı¾İ£¬ÓĞÓ¦´ğ
#define W_ADDRESS  		0x82											//Ğ´±äÁ¿¼Ä´æÆ÷£¬ÎŞÓ¦´ğ
#define R_ADDRESS  	0x83											//¶Á±äÁ¿¼Ä´æÆ÷Êı¾İ£¬ÓĞÓ¦´ğ
#define W_LINE     		0x84          									//Ğ´ÇúÏß»º³åÇø£¬ÎŞÓ¦´ğ

#pragma pack(1)
typedef struct BasicICO_Tag
{
	unsigned short X;
	unsigned short Y;
	unsigned short ICO_ID;
}Basic_ICO;
#pragma pack()
/**********************************************************************************************************/
/**********************************************************************************************************/

/**********************************************************************************************************/
/******************************************²Ù×÷ÈËÏà¹Ø¶¨Òå****************************************************/
/**********************************************************************************************************/
#define	MaxUserNum	20													//×î¶à±£´æµÄÓÃ»§ÊıÄ¿
#define	MaxPageShowNum	5												//Ò»Ò³ÏÔÊ¾ÓÃ»§ÊıÄ¿

#define	MaxNameLen	11
#define	MaxSexLen	5
#define	MaxAgeLen	7
#define	MaxPhoneLen	17
#define	MaxJobLen	33
#define	MaxDescLen	65

#pragma pack(1)
typedef struct UserTag
{ 
	char user_name[MaxNameLen];
	char user_sex[MaxSexLen];
	char user_age[MaxAgeLen];
	char user_phone[MaxPhoneLen];
	char user_job[MaxJobLen];
	char user_desc[MaxDescLen];
	unsigned short crc;
}User_Type;
#pragma pack() 
/**********************************************************************************************************/
/**********************************************************************************************************/

/**********************************************************************************************************/
/******************************************Éè±¸ĞÅÏ¢Ïà¹Ø¶¨Òå****************************************************/
/**********************************************************************************************************/

/**********************************************************************************************************/
/**********************************************************************************************************/

/**********************************************************************************************************/
/******************************************×Ô¼ì¹¦ÄÜÏà¹Ø¶¨Òå****************************************************/
/**********************************************************************************************************/



typedef enum
{
	SelfCheck_None = 0,													//×Ô¼ìÎ´¿ªÊ¼
	SelfChecking = 1,
	SelfCheck_OK = 2,													//×Ô¼ìÕı³£
	SelfCheck_Error = 3,												//×Ô¼ìÓĞ²»¿ÉºöÂÔµÄ´íÎó
}SelfCheckStatus;
/**********************************************************************************************************/
/**********************************************************************************************************/

#define	MaxDeviceIDLen	21
#define	MaxDeviceUnitLen	51

/*Éè±¸ĞÅÏ¢ÉèÖÃ*/
#pragma pack(1)
typedef struct DeviceInfo_Tag
{
	char deviceid[MaxDeviceIDLen];													//Éè±¸id
	char deviceunit[MaxDeviceUnitLen];												//Éè±¸Ê¹ÓÃµ¥Î»
	User_Type deviceuser;															//Éè±¸Ê¹ÓÃÈË
	bool isnew;															//Éè±¸ĞÅÏ¢ÊÇ·ñÓĞ¸üĞÂ
	unsigned short crc;
}DeviceInfo;
#pragma pack()

/**********************************************************************************************************/
/******************************************ÍøÂçÏà¹Ø¶¨Òå****************************************************/
/**********************************************************************************************************/
#pragma pack(1)
typedef struct ip_Tag
{
	unsigned char ip_1;
	unsigned char ip_2;
	unsigned char ip_3;
	unsigned char ip_4;
}IP_Def;
#pragma pack()

#define	MaxSaveWifiNum	50												//×î¶à±£´æ50¸öÈÈµã
#define	MaxWifiListNum	20												//×î¶àÏÔÊ¾20¸öÈÈµã
#define	PageWifiNum		8
#define	MaxSSIDLen		50
#define	MaxKEYLen		20

/*wifiÈÈµã*/
#pragma pack(1)
typedef struct wifi_Tag
{
	char ssid[MaxSSIDLen];														//SSID
	char auth[20];														//ÈÏÖ¤Ä£Ê½
	char encry[10];														//¼ÓÃÜ·½Ê½
	unsigned char indicator;											//ĞÅºÅÇ¿¶È
	char key[MaxKEYLen];														//ÃÜÂë
	unsigned short crc;
}WIFI_Def;
#pragma pack()


typedef struct mynetbuf_tag
{
	void * data;
	unsigned short datalen;
}mynetbuf;

typedef enum
{ 
	Link_Down = 0,
	Link_Up = 1
}LinkState_TypeDef;



/*ip»ñÈ¡·½Ê½*/
typedef enum
{
	DHCP_Mode = 1,														//×Ô¶¯»ñÈ¡¶¯Ì¬ip
	User_Mode = 2														//ÓÃ»§ÉèÖÃip
}NetIP_Type;



/*ÓĞÏßÍøÉèÖÃ*/
#pragma pack(1)
typedef struct NetSet_Tag
{
	IP_Def myip;														//ÎÒµÄip
	NetIP_Type ipmode;
	unsigned short crc;
}NetSet;
#pragma pack()



/**********************************************************************************************************/
/**********************************************************************************************************/

#define	MaxTestDataSaveNum	(unsigned int)1000000
	
/*********************************************************************************************/
/*********************************************************************************************/
/*********************************************************************************************/
/*******************************¶¨Ê±Æ÷********************************************************/
/*********************************************************************************************/
#pragma pack(1)
typedef struct
{
	unsigned int start;
	unsigned int interval;
}Timer;
#pragma pack()

typedef enum
{ 
	TimeNotTo = 0,		//¼ÆÊ±Ê±¼äÎ´µ½
	TimeOut = 1,		//¼ÆÊ±Ê±¼äµ½
	TimeError = 2,		//´íÎó
}TimerState_Def;

/*********************************************************************************************/
/*********************************************************************************************/
/*********************************************************************************************/
/**************************Ğ£×¼²ÎÊı***********************************************************/
/*********************************************************************************************/

//Ğ£×¼²ÎÊıÖ»±£ÁôÃû×ÖµÄÇ°10Î»
#define	AdjItemNameLen	10

#pragma pack(1)
typedef struct AdjustData_tag
{
	char ItemName[AdjItemNameLen];
	float parm;
}AdjustData;
#pragma pack()

typedef enum
{
	NoResult = 0,										//»¹Î´²âÊÔ£¬½á¹ûÎ´null
	NoSample = 1,										//Î´¼ÓÑù
	PeakError = 2,										//¼ì²â¿¨Ã»ÓĞC·å
	MemError = 3,										//ÄÚ´æ´íÎó
	TestInterrupt = 8,									//²âÊÔÖĞ¶Ï
	ResultIsOK = 99,									//²âÊÔ³É¹¦
}ResultState;

#pragma pack(1)
typedef struct TestLine_tag {
	unsigned short TestPoint[MaxPointLen];
	unsigned short C_Point[2];
	unsigned short T_Point[2];
	unsigned short B_Point[2];
	float BasicBili;
	float BasicResult;
	float AdjustResult;
} TestLine;
#pragma pack()

#pragma pack(1)
typedef struct TestData_tag {
	User_Type user;
	char sampleid[MaxSampleIDLen];
	QRCode temperweima;
	AdjustData tempadjust;
/*	float precv1[5];							//Ô¤²âÊ±µÄÕûÌåcvÖµ
	float precv2[5];							//Ô¤²âÊ±µÄCÏßcvÖµ
	unsigned char preChanelIndex[5];			//Ô¤²âÊ±µÄÍ¨µÀ
	float cv3;									//ÕıÊ½²âÊÔµÄcvÖµ
	unsigned char chanelIndex[5];				//ÕıÊ½²âÊ±µÄÍ¨µÀ*/
	TestLine testline;
	MyTime_Def TestTime;						//²âÊÔÊ±¼ä
	MyTemp_Def TestTemp;						//²âÊÔÎÂ¶È
	unsigned short time;						//³¬Ê±Ê±¼ä
	ResultState testResultDesc;					//²âÊÔ½á¹û×´Ì¬
	unsigned short crc;
}TestData;
#pragma pack()

typedef struct ItemData_tag {
	TestData testdata;
	Timer timer;																	//³£¹æµ¹¼ÆÊ±¼ÆÊ±Æ÷
	Timer timer2;																	//³¬Ê±µ¹¼ÆÊ±¼ÆÊ±Æ÷
	Timer timer3;																	//³¬Ê±µ¹¼ÆÊ±¼ÆÊ±Æ÷
	unsigned char errorcount;														//Î´²Ù×÷´ÎÊı
	MyPaiDuiStatues statues;														//²âÊÔ½×¶Î
	unsigned char jieduan;															//²âÊÔ½×¶Î
	unsigned char testlocation;
	unsigned short ledLight;														//²âÊÔÊ±ledµÄÁÁ¶È£¬ÎªÏµÍ³ÉèÖÃÖĞ±£´æµÄĞ£×¼ledÖµ
}ItemData;




/*********************************************************************************************/
/*********************************************************************************************/
/*********************************************************************************************/
/*******************************ÀÏ»¯²âÊÔÊı¾İ**************************************************/
/*********************************************************************************************/

typedef struct ReTestData_tag{
	unsigned int retestcount;								//×Ü´ÎÊı
	unsigned short retestsurpluscount;						//Ê£Óà²âÊÔ´ÎÊı
	unsigned short retestedcount;							//ÒÑ¾­²âÊÔ´ÎÊı
	unsigned char reteststatus;								//ÀÏ»¯²âÊÔ×´Ì¬£¬0Í£Ö¹£¬·Ç0²âÊÔ
	unsigned char retestStep;								//²âÊÔ²½Öè£¬1µÈ´ı²å¿¨£¬2¶Á¶şÎ¬Âë£¬3¶Á¿¨
	Timer retesttimer;										//ÀÏ»¯²âÊÔ¼ÆÊ±Æ÷
	Timer oneretesttimer;									//Ò»´ÎÀÏ»¯²âÊÔ¼ÆÊ±Æ÷
	ItemData itemData;
	char result[30];										//µ±Ç°²âÊÔµÄ½áÂÛ
	unsigned short playcount;								//ÀÏ»¯²¥·Å¼ÆÊıÆ÷£¬¼ÇÂ¼²¥·Å´ÎÊı
	Timer playtimer;										//ÀÏ»¯ÒôÆµ×ÜÊ±¼ä	
	Timer oneplaytimer;										//ÀÏ»¯²¥·Å¼ÆÊ±Æ÷£¬¼ÇÂ¼Ã¿´Î²¥·ÅµÄÊ±³¤
	MyTime_Def startplayTime;								//µ±Ç°ÒôÆµÆğÊ¼Ê±¼ä
	MyTime_Def endplayTime;									//µ±Ç°ÒôÆµ½áÊøÊ±¼ä
	double advalue1;										//DAÖµ100Ê±µÄADÖµ
	double advalue2;										//DAÖµ200Ê±µÄADÖµ
	double advalue3;										//DAÖµ300Ê±µÄADÖµ
	MyLEDCheck_TypeDef ledstatus;							//·¢¹âÄ£¿é×´Ì¬
	unsigned char playstatus;								//²¥·Å×´Ì¬
}ReTestData;


#endif

